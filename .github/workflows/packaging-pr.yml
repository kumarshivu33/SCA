# Unique name for this workflow
name: Packaging on PR

# Workflow starts when receiving custom event sent by CI workflow
on:
    workflow_dispatch:
    repository_dispatch:
        types: [start-packaging-pr]

defaults:
    run:
        shell: sh

# Jobs to be executed
jobs:
    packaging:
        runs-on: trailheadapps-Ubuntu
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  npm install @salesforce/cli --location=global
                  nodeInstallPath=$(npm config get prefix)
                  echo "$nodeInstallPath/bin" >> $GITHUB_PATH
                  sf --version

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v3

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              run: |
                  echo ${{ secrets.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
                  if [ $secretFileSize == 1 ]; then
                      echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
                      exit 1;
                  fi

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: sf org login sfdx-url -f ./DEVHUB_SFDX_URL.txt -a devhub -d

            # Remove auth file
            - name: 'Remove auth file'
              run: rm -f ./DEVHUB_SFDX_URL.txt

            # Install CLI packaging plugin
            - name: 'Install CLI packaging plugin'
              run: sf plugins install packaging

            # Create package version and extract its id
            - name: 'Create package version'
              id: createPackageVersion
              run: |
                  sf package version create -p ApexRecipes -x -w 20 -f config/project-scratch-def.json --json

            # Wait for package replication
            - name: 'Wait for package replication'
              uses: maddox/actions/sleep@master
              with:
                  args: 360

            # Create scratch org
            - name: 'Create scratch org'
              run: sf org create scratch -f config/project-scratch-def.json -a scratch-org -d -y 1

            # Install new package in scratch org
            - name: 'Install new package version in scratch org'
              run: sf package install -p ${{ steps.createPackageVersion.outputs.packageVersionId }} -w 10 -o scratch-org -r

            # Housekeeping
            - name: 'Delete scratch org'
              if: always()
              run: sf org delete scratch -p -o scratch-org
